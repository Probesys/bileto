name: Continuous Integration

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

env:
    NO_DOCKER: true
    COVERAGE: --coverage-text

jobs:
    build:
        runs-on: ${{ matrix.operating-system }}

        strategy:
            matrix:
                operating-system: [ubuntu-22.04]
                php-versions: ['8.1']

        services:
            postgres:
                image: postgres:14-alpine
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                ports:
                    - 5432/tcp
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        name: PHP ${{ matrix.php-versions }} CI

        steps:
        - uses: actions/checkout@v2

        - name: Setup PHP
          uses: shivammathur/setup-php@v2
          with:
              php-version: ${{ matrix.php-versions }}
              coverage: xdebug

        - name: Get composer cache directory
          id: composer-cache
          run: echo "::set-output name=dir::$(composer config cache-files-dir)"

        - name: Cache composer dependencies
          uses: actions/cache@v2
          with:
              path: ${{ steps.composer-cache.outputs.dir }}
              key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
              restore-keys: ${{ runner.os }}-composer-

        - name: Install dependencies
          run: make install

        - name: Setup the database
          run: make db-setup
          env:
              DATABASE_URL: "postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/probesuite?serverVersion=14&charset=utf8"

        - name: Run the linters
          run: make lint

        - name: Run the test suite
          run: make test
          env:
              DATABASE_URL: "postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/probesuite?serverVersion=14&charset=utf8"
