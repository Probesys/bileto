<?php

// This file is part of Bileto.
// Copyright 2022-2024 Probesys
// SPDX-License-Identifier: AGPL-3.0-or-later

declare(strict_types=1);

namespace DoctrineMigrations;

use Doctrine\DBAL\Platforms\MariaDBPlatform;
use Doctrine\DBAL\Platforms\PostgreSQLPlatform;
use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

final class Version20240703090153UpgradeDoctrine extends AbstractMigration
{
    public function getDescription(): string
    {
        return 'Upgrade the schema according to new version of Doctrine.';
    }

    public function preUp(Schema $schema): void
    {
        // Change the Roles::$permissions from array to json column type
        $roles = $this->connection->fetchAllAssociative("SELECT * FROM role");
        foreach ($roles as $role) {
            $permissions = $role['permissions'];
            $permissions = unserialize($permissions);
            $permissions = json_encode($permissions);

            $this->connection->update('role', [
                'permissions' => $permissions,
            ], [
                'id' => $role['id'],
            ]);
        }
    }

    public function up(Schema $schema): void
    {
        // phpcs:disable Generic.Files.LineLength
        $dbPlatform = $this->connection->getDatabasePlatform();
        if ($dbPlatform instanceof PostgreSQLPlatform) {
            $this->addSql('ALTER TABLE authorizations ALTER id ADD GENERATED BY DEFAULT AS IDENTITY');
            $this->addSql('ALTER TABLE authorizations ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE authorizations ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN authorizations.created_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN authorizations.updated_at IS \'\'');
            $this->addSql('ALTER TABLE contract ALTER id ADD GENERATED BY DEFAULT AS IDENTITY');
            $this->addSql('ALTER TABLE contract ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE contract ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE contract ALTER start_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE contract ALTER end_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN contract.created_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN contract.updated_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN contract.start_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN contract.end_at IS \'\'');
            $this->addSql('ALTER TABLE entity_event ALTER id ADD GENERATED BY DEFAULT AS IDENTITY');
            $this->addSql('ALTER TABLE entity_event ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE entity_event ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN entity_event.created_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN entity_event.updated_at IS \'\'');
            $this->addSql('ALTER TABLE mailbox ALTER id ADD GENERATED BY DEFAULT AS IDENTITY');
            $this->addSql('ALTER TABLE mailbox ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE mailbox ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE mailbox ALTER last_error_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN mailbox.created_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN mailbox.updated_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN mailbox.last_error_at IS \'\'');
            $this->addSql('ALTER TABLE mailbox_email ALTER id ADD GENERATED BY DEFAULT AS IDENTITY');
            $this->addSql('ALTER TABLE mailbox_email ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE mailbox_email ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE mailbox_email ALTER last_error_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN mailbox_email.created_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN mailbox_email.updated_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN mailbox_email.last_error_at IS \'\'');
            $this->addSql('ALTER TABLE message ALTER id ADD GENERATED BY DEFAULT AS IDENTITY');
            $this->addSql('ALTER TABLE message ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE message ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN message.created_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN message.updated_at IS \'\'');
            $this->addSql('ALTER TABLE message_document ALTER id ADD GENERATED BY DEFAULT AS IDENTITY');
            $this->addSql('ALTER TABLE message_document ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE message_document ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN message_document.created_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN message_document.updated_at IS \'\'');
            $this->addSql('ALTER TABLE organization ALTER id ADD GENERATED BY DEFAULT AS IDENTITY');
            $this->addSql('ALTER TABLE organization ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE organization ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN organization.created_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN organization.updated_at IS \'\'');
            $this->addSql('ALTER TABLE role ALTER id ADD GENERATED BY DEFAULT AS IDENTITY');
            $this->addSql('ALTER TABLE role ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE role ALTER permissions TYPE JSON USING permissions::json');
            $this->addSql('ALTER TABLE role ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN role.created_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN role.permissions IS \'\'');
            $this->addSql('COMMENT ON COLUMN role.updated_at IS \'\'');
            $this->addSql('ALTER TABLE team ALTER id ADD GENERATED BY DEFAULT AS IDENTITY');
            $this->addSql('ALTER TABLE team ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE team ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN team.created_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN team.updated_at IS \'\'');
            $this->addSql('ALTER TABLE team_authorization ALTER id ADD GENERATED BY DEFAULT AS IDENTITY');
            $this->addSql('ALTER TABLE team_authorization ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE team_authorization ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN team_authorization.created_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN team_authorization.updated_at IS \'\'');
            $this->addSql('ALTER TABLE ticket ALTER id ADD GENERATED BY DEFAULT AS IDENTITY');
            $this->addSql('ALTER TABLE ticket ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE ticket ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN ticket.created_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN ticket.updated_at IS \'\'');
            $this->addSql('ALTER TABLE time_spent ALTER id ADD GENERATED BY DEFAULT AS IDENTITY');
            $this->addSql('ALTER TABLE time_spent ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE time_spent ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN time_spent.created_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN time_spent.updated_at IS \'\'');
            $this->addSql('ALTER TABLE users ALTER id ADD GENERATED BY DEFAULT AS IDENTITY');
            $this->addSql('ALTER TABLE users ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE users ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN users.created_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN users.updated_at IS \'\'');
            $this->addSql('ALTER TABLE messenger_messages ALTER id DROP DEFAULT');
            $this->addSql('ALTER TABLE messenger_messages ALTER id ADD GENERATED BY DEFAULT AS IDENTITY');
            $this->addSql('ALTER TABLE messenger_messages ALTER created_at TYPE TIMESTAMP(0) WITHOUT TIME ZONE');
            $this->addSql('ALTER TABLE messenger_messages ALTER available_at TYPE TIMESTAMP(0) WITHOUT TIME ZONE');
            $this->addSql('ALTER TABLE messenger_messages ALTER delivered_at TYPE TIMESTAMP(0) WITHOUT TIME ZONE');
            $this->addSql('COMMENT ON COLUMN messenger_messages.created_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN messenger_messages.available_at IS \'\'');
            $this->addSql('COMMENT ON COLUMN messenger_messages.delivered_at IS \'\'');
            $this->addSql('ALTER TABLE rememberme_token ALTER lastused TYPE TIMESTAMP(0) WITHOUT TIME ZONE');
            $this->addSql('COMMENT ON COLUMN rememberme_token.lastUsed IS \'\'');
        } elseif ($dbPlatform instanceof MariaDBPlatform) {
            $this->addSql('ALTER TABLE authorizations CHANGE created_at created_at DATETIME NOT NULL, CHANGE updated_at updated_at DATETIME NOT NULL');
            $this->addSql('ALTER TABLE contract CHANGE created_at created_at DATETIME NOT NULL, CHANGE updated_at updated_at DATETIME NOT NULL, CHANGE start_at start_at DATETIME NOT NULL, CHANGE end_at end_at DATETIME NOT NULL');
            $this->addSql('ALTER TABLE entity_event CHANGE created_at created_at DATETIME NOT NULL, CHANGE changes changes JSON NOT NULL, CHANGE updated_at updated_at DATETIME NOT NULL');
            $this->addSql('ALTER TABLE mailbox CHANGE created_at created_at DATETIME NOT NULL, CHANGE updated_at updated_at DATETIME NOT NULL, CHANGE last_error_at last_error_at DATETIME DEFAULT NULL');
            $this->addSql('ALTER TABLE mailbox_email CHANGE created_at created_at DATETIME NOT NULL, CHANGE updated_at updated_at DATETIME NOT NULL, CHANGE last_error_at last_error_at DATETIME DEFAULT NULL');
            $this->addSql('ALTER TABLE message CHANGE created_at created_at DATETIME NOT NULL, CHANGE updated_at updated_at DATETIME NOT NULL');
            $this->addSql('ALTER TABLE message_document CHANGE created_at created_at DATETIME NOT NULL, CHANGE updated_at updated_at DATETIME NOT NULL');
            $this->addSql('ALTER TABLE organization CHANGE created_at created_at DATETIME NOT NULL, CHANGE updated_at updated_at DATETIME NOT NULL, CHANGE domains domains JSON DEFAULT \'[]\' NOT NULL');
            $this->addSql('ALTER TABLE role CHANGE created_at created_at DATETIME NOT NULL, CHANGE permissions permissions JSON NOT NULL, CHANGE updated_at updated_at DATETIME NOT NULL');
            $this->addSql('ALTER TABLE team CHANGE created_at created_at DATETIME NOT NULL, CHANGE updated_at updated_at DATETIME NOT NULL');
            $this->addSql('ALTER TABLE team_authorization CHANGE created_at created_at DATETIME NOT NULL, CHANGE updated_at updated_at DATETIME NOT NULL');
            $this->addSql('ALTER TABLE ticket CHANGE created_at created_at DATETIME NOT NULL, CHANGE updated_at updated_at DATETIME NOT NULL');
            $this->addSql('ALTER TABLE time_spent CHANGE created_at created_at DATETIME NOT NULL, CHANGE updated_at updated_at DATETIME NOT NULL');
            $this->addSql('ALTER TABLE users CHANGE created_at created_at DATETIME NOT NULL, CHANGE updated_at updated_at DATETIME NOT NULL');
            $this->addSql('ALTER TABLE messenger_messages CHANGE created_at created_at DATETIME NOT NULL, CHANGE available_at available_at DATETIME NOT NULL, CHANGE delivered_at delivered_at DATETIME DEFAULT NULL');
            $this->addSql('ALTER TABLE rememberme_token CHANGE lastUsed lastUsed DATETIME NOT NULL');
        }
        // phpcs:enable
    }

    public function down(Schema $schema): void
    {
        // phpcs:disable Generic.Files.LineLength
        $dbPlatform = $this->connection->getDatabasePlatform();
        if ($dbPlatform instanceof PostgreSQLPlatform) {
            $this->addSql('ALTER TABLE messenger_messages ALTER id DROP IDENTITY');
            $this->addSql('ALTER TABLE messenger_messages ALTER id SET DEFAULT messenger_messages_id_seq');
            $this->addSql('ALTER TABLE messenger_messages ALTER created_at TYPE TIMESTAMP(0) WITHOUT TIME ZONE');
            $this->addSql('ALTER TABLE messenger_messages ALTER available_at TYPE TIMESTAMP(0) WITHOUT TIME ZONE');
            $this->addSql('ALTER TABLE messenger_messages ALTER delivered_at TYPE TIMESTAMP(0) WITHOUT TIME ZONE');
            $this->addSql('COMMENT ON COLUMN messenger_messages.created_at IS \'(DC2Type:datetime_immutable)\'');
            $this->addSql('COMMENT ON COLUMN messenger_messages.available_at IS \'(DC2Type:datetime_immutable)\'');
            $this->addSql('COMMENT ON COLUMN messenger_messages.delivered_at IS \'(DC2Type:datetime_immutable)\'');
            $this->addSql('ALTER TABLE contract ALTER id DROP IDENTITY');
            $this->addSql('ALTER TABLE contract ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE contract ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE contract ALTER start_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE contract ALTER end_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN contract.created_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN contract.updated_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN contract.start_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN contract.end_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE time_spent ALTER id DROP IDENTITY');
            $this->addSql('ALTER TABLE time_spent ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE time_spent ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN time_spent.created_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN time_spent.updated_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE ticket ALTER id DROP IDENTITY');
            $this->addSql('ALTER TABLE ticket ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE ticket ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN ticket.created_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN ticket.updated_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE rememberme_token ALTER lastUsed TYPE TIMESTAMP(0) WITHOUT TIME ZONE');
            $this->addSql('COMMENT ON COLUMN rememberme_token.lastused IS \'(DC2Type:datetime_immutable)\'');
            $this->addSql('ALTER TABLE team_authorization ALTER id DROP IDENTITY');
            $this->addSql('ALTER TABLE team_authorization ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE team_authorization ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN team_authorization.created_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN team_authorization.updated_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE message ALTER id DROP IDENTITY');
            $this->addSql('ALTER TABLE message ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE message ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN message.created_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN message.updated_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE "authorizations" ALTER id DROP IDENTITY');
            $this->addSql('ALTER TABLE "authorizations" ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE "authorizations" ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN "authorizations".created_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN "authorizations".updated_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE mailbox_email ALTER id DROP IDENTITY');
            $this->addSql('ALTER TABLE mailbox_email ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE mailbox_email ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE mailbox_email ALTER last_error_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN mailbox_email.created_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN mailbox_email.updated_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN mailbox_email.last_error_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE organization ALTER id DROP IDENTITY');
            $this->addSql('ALTER TABLE organization ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE organization ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN organization.created_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN organization.updated_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE message_document ALTER id DROP IDENTITY');
            $this->addSql('ALTER TABLE message_document ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE message_document ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN message_document.created_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN message_document.updated_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE mailbox ALTER id DROP IDENTITY');
            $this->addSql('ALTER TABLE mailbox ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE mailbox ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE mailbox ALTER last_error_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN mailbox.created_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN mailbox.updated_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN mailbox.last_error_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE role ALTER id DROP IDENTITY');
            $this->addSql('ALTER TABLE role ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE role ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE role ALTER permissions TYPE TEXT');
            $this->addSql('COMMENT ON COLUMN role.created_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN role.updated_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN role.permissions IS \'(DC2Type:array)\'');
            $this->addSql('ALTER TABLE "users" ALTER id DROP IDENTITY');
            $this->addSql('ALTER TABLE "users" ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE "users" ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN "users".created_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN "users".updated_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE team ALTER id DROP IDENTITY');
            $this->addSql('ALTER TABLE team ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE team ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN team.created_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN team.updated_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE entity_event ALTER id DROP IDENTITY');
            $this->addSql('ALTER TABLE entity_event ALTER created_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('ALTER TABLE entity_event ALTER updated_at TYPE TIMESTAMP(0) WITH TIME ZONE');
            $this->addSql('COMMENT ON COLUMN entity_event.created_at IS \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('COMMENT ON COLUMN entity_event.updated_at IS \'(DC2Type:datetimetz_immutable)\'');
        } elseif ($dbPlatform instanceof MariaDBPlatform) {
            $this->addSql('ALTER TABLE contract CHANGE created_at created_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE updated_at updated_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE start_at start_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE end_at end_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE message CHANGE created_at created_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE updated_at updated_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE rememberme_token CHANGE lastUsed lastUsed DATETIME NOT NULL COMMENT \'(DC2Type:datetime_immutable)\'');
            $this->addSql('ALTER TABLE role CHANGE created_at created_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE updated_at updated_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE permissions permissions LONGTEXT NOT NULL COMMENT \'(DC2Type:array)\'');
            $this->addSql('ALTER TABLE organization CHANGE created_at created_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE updated_at updated_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE domains domains JSON DEFAULT \'[]\' NOT NULL COMMENT \'(DC2Type:json)\'');
            $this->addSql('ALTER TABLE team_authorization CHANGE created_at created_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE updated_at updated_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE `authorizations` CHANGE created_at created_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE updated_at updated_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE mailbox CHANGE created_at created_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE updated_at updated_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE last_error_at last_error_at DATETIME DEFAULT NULL COMMENT \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE ticket CHANGE created_at created_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE updated_at updated_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE `users` CHANGE created_at created_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE updated_at updated_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE time_spent CHANGE created_at created_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE updated_at updated_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE messenger_messages CHANGE created_at created_at DATETIME NOT NULL COMMENT \'(DC2Type:datetime_immutable)\', CHANGE available_at available_at DATETIME NOT NULL COMMENT \'(DC2Type:datetime_immutable)\', CHANGE delivered_at delivered_at DATETIME DEFAULT NULL COMMENT \'(DC2Type:datetime_immutable)\'');
            $this->addSql('ALTER TABLE entity_event CHANGE created_at created_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE updated_at updated_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE changes changes JSON NOT NULL COMMENT \'(DC2Type:json)\'');
            $this->addSql('ALTER TABLE team CHANGE created_at created_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE updated_at updated_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE mailbox_email CHANGE created_at created_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE updated_at updated_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE last_error_at last_error_at DATETIME DEFAULT NULL COMMENT \'(DC2Type:datetimetz_immutable)\'');
            $this->addSql('ALTER TABLE message_document CHANGE created_at created_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\', CHANGE updated_at updated_at DATETIME NOT NULL COMMENT \'(DC2Type:datetimetz_immutable)\'');
        }
        // phpcs:enable
    }

    public function postDown(Schema $schema): void
    {
        // Change the Roles::$permissions from json to array column type
        $roles = $this->connection->fetchAllAssociative("SELECT * FROM role");
        foreach ($roles as $role) {
            $permissions = $role['permissions'];
            $permissions = json_decode($permissions, true);
            $permissions = serialize($permissions);

            $this->connection->update('role', [
                'permissions' => $permissions,
            ], [
                'id' => $role['id'],
            ]);
        }
    }
}
